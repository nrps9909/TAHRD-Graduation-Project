Title: Troubleshooting - Anthropic
File: troubleshooting.html
==================================================

Troubleshooting - Anthropic 
Anthropic home page English 

Search... 

Search... 

Navigation Build with Claude Code 
Troubleshooting 

Welcome 
Developer Platform 
Claude Code 
Model Context Protocol (MCP) 
API Reference 
Resources 
Release Notes 

Getting started Overview 

Quickstart 

Common workflows 

Build with Claude Code Claude Code SDK 

Subagents 

Claude Code hooks 

GitHub Actions 

Model Context Protocol (MCP) 

Troubleshooting 

Deployment Overview 

Amazon Bedrock 

Google Vertex AI 

Corporate proxy 

LLM gateway 

Development containers 

Administration Advanced installation 

Identity and Access Management 

Security 

Data usage 

Monitoring 

Costs 

Analytics 

Configuration Settings 

Add Claude Code to your IDE 

Terminal configuration 

Memory management 

Status line configuration 

Reference CLI reference 

Interactive mode 

Slash commands 

Hooks reference 

Resources Legal and compliance 

==== ====

=== ​ 

Common installation issues ===

== ​ 

Windows installation issues: errors in WSL ==
You might encounter the following issues in WSL: 
OS/platform detection issues : If you receive an error during installation, WSL may be using Windows npm . Try: 
Run npm config set os linux before installation 
Install with npm install -g @anthropic-ai/claude-code --force --no-os-check (Do NOT use sudo ) 
Node not found errors : If you see exec: node: not found when running claude , your WSL environment may be using a Windows installation of Node.js. You can confirm this with which npm and which node , which should point to Linux paths starting with /usr/ rather than /mnt/c/ . To fix this, try installing Node via your Linux distribution’s package manager or via nvm . 

== ​ 

Linux and Mac installation issues: permission or command not found errors ==
When installing Claude Code with npm, PATH problems may prevent access to claude .
You may also encounter permission errors if your npm global prefix is not user writable (eg. /usr , or /usr/local ). 

= ​ 

Recommended solution: Native Claude Code installation =
Claude Code has a native installation that doesn’t depend on npm or Node.js. 

The native Claude Code installer is currently in beta. 

Use the following command to run the native installer. 
macOS, Linux, WSL: 
# Install stable version (default) curl -fsSL https://claude.ai/install.sh | bash # Install latest version curl -fsSL https://claude.ai/install.sh | bash -s latest # Install specific version number curl -fsSL https://claude.ai/install.sh | bash -s 1.0 .58 

Windows PowerShell: 
# Install stable version (default) irm https: / / claude . ai/install . ps1 | iex # Install latest version & ( [scriptblock] ::Create ( ( irm https: / / claude . ai/install . ps1 ) ) ) latest # Install specific version number & ( [scriptblock] ::Create ( ( irm https: / / claude . ai/install . ps1 ) ) ) 1 . 0 . 58 

This command installs the appropriate build of Claude Code for your operating system and architecture and adds a symlink to the installation at ~/.local/bin/claude . 

Make sure that you have the installation directory in your system PATH. 

= ​ 

Alternative solution: Migrate to local installation =
Alternatively, if Claude Code will run, you can migrate to a local installation: 
claude migrate-installer 

This moves Claude Code to ~/.claude/local/ and sets up an alias in your shell configuration. No sudo is required for future updates. 
After migration, restart your shell, and then verify your installation: 
On macOS/Linux/WSL: 
which claude # Should show an alias to ~/.claude/local/claude 

On Windows: 
where claude # Should show path to claude executable 

Verify installation: 
claude doctor # Check installation health 

=== ​ 

Permissions and authentication ===

== ​ 

Repeated permission prompts ==
If you find yourself repeatedly approving the same commands, you can allow specific tools
to run without approval using the /permissions command. See Permissions docs . 

== ​ 

Authentication issues ==
If you’re experiencing authentication problems: 
Run /logout to sign out completely 
Close Claude Code 
Restart with claude and complete the authentication process again 
If problems persist, try: 
rm -rf ~/.config/claude-code/auth.json claude 

This removes your stored authentication information and forces a clean login. 

=== ​ 

Performance and stability ===

== ​ 

High CPU or memory usage ==
Claude Code is designed to work with most development environments, but may consume significant resources when processing large codebases. If you’re experiencing performance issues: 
Use /compact regularly to reduce context size 
Close and restart Claude Code between major tasks 
Consider adding large build directories to your .gitignore file 

== ​ 

Command hangs or freezes ==
If Claude Code seems unresponsive: 
Press Ctrl+C to attempt to cancel the current operation 
If unresponsive, you may need to close the terminal and restart 

== ​ 

ESC key not working in JetBrains (IntelliJ, PyCharm, etc.)