Title: Claude Code on Amazon Bedrock - Anthropic
File: amazon-bedrock.html
==================================================

Claude Code on Amazon Bedrock - Anthropic 
Anthropic home page English 

Search... 

Search... 

Navigation Deployment 
Claude Code on Amazon Bedrock 

Welcome 
Developer Platform 
Claude Code 
Model Context Protocol (MCP) 
API Reference 
Resources 
Release Notes 

Getting started Overview 

Quickstart 

Common workflows 

Build with Claude Code Claude Code SDK 

Subagents 

Claude Code hooks 

GitHub Actions 

Model Context Protocol (MCP) 

Troubleshooting 

Deployment Overview 

Amazon Bedrock 

Google Vertex AI 

Corporate proxy 

LLM gateway 

Development containers 

Administration Advanced installation 

Identity and Access Management 

Security 

Data usage 

Monitoring 

Costs 

Analytics 

Configuration Settings 

Add Claude Code to your IDE 

Terminal configuration 

Memory management 

Status line configuration 

Reference CLI reference 

Interactive mode 

Slash commands 

Hooks reference 

Resources Legal and compliance 

==== ====

=== ​ 

Prerequisites ===
Before configuring Claude Code with Bedrock, ensure you have: 
An AWS account with Bedrock access enabled 
Access to desired Claude models (e.g., Claude Sonnet 4) in Bedrock 
AWS CLI installed and configured (optional - only needed if you don’t have another mechanism for getting credentials) 
Appropriate IAM permissions 

=== ​ 

Setup ===

== ​ 

1. Enable model access ==
First, ensure you have access to the required Claude models in your AWS account: 
Navigate to the Amazon Bedrock console 
Go to Model access in the left navigation 
Request access to desired Claude models (e.g., Claude Sonnet 4) 
Wait for approval (usually instant for most regions) 

== ​ 

2. Configure AWS credentials ==
Claude Code uses the default AWS SDK credential chain. Set up your credentials using one of these methods: 
Option A: AWS CLI configuration 
aws configure 

Option B: Environment variables (access key) 
export AWS_ACCESS_KEY_ID = your-access-key-id export AWS_SECRET_ACCESS_KEY = your-secret-access-key export AWS_SESSION_TOKEN = your-session-token 

Option C: Environment variables (SSO profile) 
aws sso login --profile = < your-profile-name > export AWS_PROFILE = your-profile-name 

Option D: Bedrock API keys 
export AWS_BEARER_TOKEN_BEDROCK = your-bedrock-api-key 

Bedrock API keys provide a simpler authentication method without needing full AWS credentials. Learn more about Bedrock API keys . 

= ​ 

Advanced credential configuration =
Claude Code supports automatic credential refresh for AWS SSO and corporate identity providers. Add these settings to your Claude Code settings file (see Settings for file locations). 
When Claude Code detects that your AWS credentials are expired (either locally based on their timestamp or when Bedrock returns a credential error), it will automatically run your configured awsAuthRefresh and/or awsCredentialExport commands to obtain new credentials before retrying the request. 
Example configuration { "awsAuthRefresh" : "aws sso login --profile myprofile" , "env" : { "AWS_PROFILE" : "myprofile" } } 

Configuration settings explained awsAuthRefresh : Use this for commands that modify the .aws directory (e.g., updating credentials, SSO cache, or config files). Output is shown to the user (but user input is not supported), making it suitable for browser-based authentication flows where the CLI displays a code to enter in the browser. 
awsCredentialExport : Only use this if you cannot modify .aws and must directly return credentials. Output is captured silently (not shown to the user). The command must output JSON in this format: 
{ "Credentials" : { "AccessKeyId" : "value" , "SecretAccessKey" : "value" , "SessionToken" : "value" } } 

== ​ 

3. Configure Claude Code ==
Set the following environment variables to enable Bedrock: 
# Enable Bedrock integration export CLAUDE_CODE_USE_BEDROCK = 1 export AWS_REGION = us-east-1 # or your preferred region # Optional: Override the region for the small/fast model (Haiku) export ANTHROPIC_SMALL_FAST_MODEL_AWS_REGION = us-west-2 

When enabling Bedrock for Claude Code, keep the following in mind: 
AWS_REGION is a required environment variable. Claude Code does not read from the .aws config file for this setting. 
When using Bedrock, the /login and /logout commands are disabled since authentication is handled through AWS credentials. 
You can use settings files for environment variables like AWS_PROFILE that you don’t want to leak to other processes. See Settings for more information. 

== ​ 

4. Model configuration ==
Claude Code uses these default models for Bedrock: 
Model type Default value Primary model us.anthropic.claude-3-7-sonnet-20250219-v1:0 Small/fast model us.anthropic.claude-3-5-haiku-20241022-v1:0 To customize models, use one of these methods: 
# Using inference profile ID export ANTHROPIC_MODEL = 'us.anthropic.claude-opus-4-1-20250805-v1:0' export ANTHROPIC_SMALL_FAST_MODEL = 'us.anthropic.claude-3-5-haiku-20241022-v1:0' # Using application inference profile ARN export ANT