Title: Monitoring - Anthropic
File: monitoring-usage.html
==================================================

Monitoring - Anthropic 
Anthropic home page English 

Search... 

Search... 

Navigation Administration 
Monitoring 

Welcome 
Developer Platform 
Claude Code 
Model Context Protocol (MCP) 
API Reference 
Resources 
Release Notes 

Getting started Overview 

Quickstart 

Common workflows 

Build with Claude Code Claude Code SDK 

Subagents 

Claude Code hooks 

GitHub Actions 

Model Context Protocol (MCP) 

Troubleshooting 

Deployment Overview 

Amazon Bedrock 

Google Vertex AI 

Corporate proxy 

LLM gateway 

Development containers 

Administration Advanced installation 

Identity and Access Management 

Security 

Data usage 

Monitoring 

Costs 

Analytics 

Configuration Settings 

Add Claude Code to your IDE 

Terminal configuration 

Memory management 

Status line configuration 

Reference CLI reference 

Interactive mode 

Slash commands 

Hooks reference 

Resources Legal and compliance 

==== ====

Claude Code supports OpenTelemetry (OTel) metrics and events for monitoring and observability. 
All metrics are time series data exported via OpenTelemetry’s standard metrics protocol, and events are exported via OpenTelemetry’s logs/events protocol. It is the user’s responsibility to ensure their metrics and logs backends are properly configured and that the aggregation granularity meets their monitoring requirements. 

OpenTelemetry support is currently in beta and details are subject to change. 

=== ​ 

Quick Start ===
Configure OpenTelemetry using environment variables: 
# 1. Enable telemetry export CLAUDE_CODE_ENABLE_TELEMETRY = 1 # 2. Choose exporters (both are optional - configure only what you need) export OTEL_METRICS_EXPORTER = otlp # Options: otlp, prometheus, console export OTEL_LOGS_EXPORTER = otlp # Options: otlp, console # 3. Configure OTLP endpoint (for OTLP exporter) export OTEL_EXPORTER_OTLP_PROTOCOL = grpc export OTEL_EXPORTER_OTLP_ENDPOINT = http://localhost:4317 # 4. Set authentication (if required) export OTEL_EXPORTER_OTLP_HEADERS = "Authorization=Bearer your-token" # 5. For debugging: reduce export intervals export OTEL_METRIC_EXPORT_INTERVAL = 10000 # 10 seconds (default: 60000ms) export OTEL_LOGS_EXPORT_INTERVAL = 5000 # 5 seconds (default: 5000ms) # 6. Run Claude Code claude 

The default export intervals are 60 seconds for metrics and 5 seconds for logs. During setup, you may want to use shorter intervals for debugging purposes. Remember to reset these for production use. 

For full configuration options, see the OpenTelemetry specification . 

=== ​ 

Administrator Configuration ===
Administrators can configure OpenTelemetry settings for all users through the managed settings file. This allows for centralized control of telemetry settings across an organization. See the settings precedence for more information about how settings are applied. 
The managed settings file is located at: 
macOS: /Library/Application Support/ClaudeCode/managed-settings.json 
Linux and WSL: /etc/claude-code/managed-settings.json 
Windows: C:\ProgramData\ClaudeCode\managed-settings.json 
Example managed settings configuration: 
{ "env" : { "CLAUDE_CODE_ENABLE_TELEMETRY" : "1" , "OTEL_METRICS_EXPORTER" : "otlp" , "OTEL_LOGS_EXPORTER" : "otlp" , "OTEL_EXPORTER_OTLP_PROTOCOL" : "grpc" , "OTEL_EXPORTER_OTLP_ENDPOINT" : "http://collector.company.com:4317" , "OTEL_EXPORTER_OTLP_HEADERS" : "Authorization=Bearer company-token" } } 

Managed settings can be distributed via MDM (Mobile Device Management) or other device management solutions. Environment variables defined in the managed settings file have high precedence and cannot be overridden by users. 

=== ​ 

Configuration Details ===

== ​ 

Common Configuration Variables ==
Environment Variable Description Example Values CLAUDE_CODE_ENABLE_TELEMETRY Enables telemetry collection (required) 1 OTEL_METRICS_EXPORTER Metrics exporter type(s) (comma-separated) console , otlp , prometheus OTEL_LOGS_EXPORTER Logs/events exporter type(s) (comma-separated) console , otlp OTEL_EXPORTER_OTLP_PROTOCOL Protocol for OTLP exporter (all signals) grpc , http/json , http/protobuf OTEL_EXPORTER_OTLP_ENDPOINT OTLP collector endpoint (all signals) http://localhost:4317 OTEL_EXPORTER_OTLP_METRICS_PROTOCOL Protocol for metrics (overrides general) grpc , http/json , http/protobuf OTEL_EXPORTER_OTLP_METRICS_ENDPOINT OTLP metrics endpoint (overrides general) http://localhost:4318/v1/metrics OTEL_EXPORTER_OTLP_LOGS_PROTOCOL Protocol for logs (overrides general) grpc , http/json , http/protobuf OTEL_EXPORTER_OTLP_LOGS_ENDPOINT OTLP logs endpoint (overrides general) http://localhost:4318/v1/logs OTEL_EXPORTER_OTLP_HEADERS Authentication headers for OTLP Authorization=Bearer token OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY Client key for mTLS authentication Path to client key file OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE Client certificate for mTLS authentication Path to client cert file OTEL_METRIC_EXPORT_INTERVAL Export interval in milliseconds (default: 60000) 5000 , 60000 O