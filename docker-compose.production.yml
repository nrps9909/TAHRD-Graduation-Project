version: '3.8'

services:
  # MongoDB 資料庫
  mongodb:
    image: mongo:7
    container_name: heart-whisper-mongodb
    restart: unless-stopped
    volumes:
      - mongodb_data:/data/db
    networks:
      - heart-whisper-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Redis 緩存
  redis:
    image: redis:7-alpine
    container_name: heart-whisper-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - heart-whisper-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # 後端 API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: heart-whisper-backend
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=mongodb://mongodb:27017/heart-whisper-town
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/memories:/app/memories
      - ./backend/logs:/app/logs
    networks:
      - heart-whisper-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端應用（生產構建）
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: heart-whisper-frontend
    restart: unless-stopped
    env_file:
      - .env.production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - heart-whisper-network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: heart-whisper-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - heart-whisper-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  heart-whisper-network:
    driver: bridge
